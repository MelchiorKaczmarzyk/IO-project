@model IOProject.Models.HelpProject
@using IOProject.Models
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@{
    ViewData["Title"] = "Details";
}
@inject SignInManager<SystemUser> SignInManager
@inject UserManager<SystemUser> UserManager
<div>
    <h1>@Html.DisplayFor(model => model.Title)</h1>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ShortDescription)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ShortDescription)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.WhenEnds)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.WhenEnds)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.targetAmount)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.targetAmount)$
        </dd>
        @if (Model.Tags != null)
        {
            <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Tags)
            </dt>
            @foreach (var tag in Model.Tags)
            {
                if (tag != Model.Tags.First()) {<dt class="col-sm-2"></dt> }
                <dd class="col-sm-10">
                    @tag
                </dd>
			}
		}

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Thumbnail)
        </dt>
        <dd>
            @{
                @*To properly display thumbnail image we need to identify its relative path in wwwroot folder.*@
                @inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment env
                string? relativeFileName = Model.Thumbnail?.TrimStart(env.WebRootPath.ToCharArray());
            }
            <img class="thumbnail-image-big" src="@Url.Content("~/"+relativeFileName)" alt="Couldn't display image!" /> 
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LongDescription)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LongDescription)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FileAttachments)
        </dt>
        <dd class="col-sm-10">
            @foreach (var item in Model.FileAttachments)
            {
                string? PdfName = item?.TrimStart(env.WebRootPath.ToCharArray());
                PdfName = PdfName?.TrimStart("//Files\\".ToCharArray());
                <a asp-action="DownloadFile" asp-route-outputFilePath="@item" target="_blank"> @PdfName </a>
                <br />
            }
        </dd>
    </dl>
</div>
<div>
    @if (SignInManager.IsSignedIn(User))
    {
        @if (User.IsInRole("Beneficiary") || User.IsInRole("Admin"))
        {
            <h5>
                <a asp-controller="Applications" asp-action="Create" asp-route-ProjectID="@Model?.Id">Apply</a>
            </h5>
            <br />
        }
        @if (User.IsInRole("Organisation") && User.FindFirstValue(ClaimTypes.NameIdentifier) == Model.OwnerID || User.IsInRole("Admin"))
        {
            <h5>
            <a asp-controller="Applications" asp-action="ShowProjectApplications" asp-route-HelpProjectID="@Model?.Id">Look through applications</a>
            </h5>
            <br />
        }
    }
    
    @*<a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |*@
    <h6>
    <a asp-action="Index">Back to List of all active projects</a>
    </h6>
    
</div>
